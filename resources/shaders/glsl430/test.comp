#version 430 core

#define GOL_WIDTH 768

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430, binding = 1) readonly restrict buffer golLayout {
    vec3 golBuffer[];       // golBuffer[x, y] = golBuffer[x + gl_NumWorkGroups.x * y]
};

layout(std430, binding = 2) writeonly restrict buffer golLayout2 {
    vec3 golBufferDest[];   // golBufferDest[x, y] = golBufferDest[x + gl_NumWorkGroups.x * y]
};

layout(std430, binding = 3) readonly restrict buffer golLayout3 {
    uint shiftValue[];
};

#define getGol(x, y) golBuffer[(x) + GOL_WIDTH*(y)]

#define setGol(x, y, value) golBufferDest[(x) + GOL_WIDTH*(y)] = value

void main() {
    uint shift = shiftValue[0];

    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;

    vec3 value = vec3(float((x + shift) % 768)/(GOL_WIDTH), float(y)/(GOL_WIDTH), 0.0);

    setGol(x, y, value);
}
